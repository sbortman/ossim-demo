buildscript {
  repositories {
    maven { url "https://repo.grails.org/grails/core" }
  }
  dependencies {
    classpath "org.grails:grails-gradle-plugin:$grailsVersion"
    classpath "gradle.plugin.com.github.erdi.webdriver-binaries:webdriver-binaries-gradle-plugin:2.0"
    classpath "org.grails.plugins:hibernate5:7.0.4"
    classpath "com.bertramlabs.plugins:asset-pipeline-gradle:3.2.4"
  }
}

plugins {
  id "com.google.cloud.tools.jib" version "2.6.0"
}

version "0.1"
group "ossim.demo"

apply plugin: "eclipse"
apply plugin: "idea"
apply plugin: "org.grails.grails-web"
apply plugin: "com.github.erdi.webdriver-binaries"
apply plugin: "com.bertramlabs.asset-pipeline"
apply plugin: "org.grails.grails-gsp"

repositories {
  mavenLocal()
  maven { url "https://nexus.ossim.io/repository/all-repos" }
  maven { url "https://repo.grails.org/grails/core" }
}

configurations.all {
  exclude module: 'groovy-all'
  exclude module: 'javaee-api'
}

configurations {
  developmentOnly
  runtimeClasspath {
    extendsFrom developmentOnly
  }
}

dependencies {
//  compile 'net.errbuddy.plugins:babel-asset-pipeline:2.0.6'

  compile 'org.webjars:openlayers:4.6.5'
  compile 'org.webjars.bowergithub.walkermatt:ol-layerswitcher:2.0.0'

  compile 'org.ossim:joms:1.9.0-SNAPSHOT'

  compile( "org.geoscript:geoscript-groovy:1.14.0" ) {
    exclude module: "ehcache"
    exclude module: "groovy-all"
    exclude module: "slf4j-log4j12"
    exclude module: "xml-apis"
    exclude module: "commons-beanutils"
    exclude module: "gt-jdbc-spatialite"
    exclude module: 'gt-swing'
  }

  developmentOnly( "org.springframework.boot:spring-boot-devtools" )
  compile "org.springframework.boot:spring-boot-starter-logging"
  compile "org.springframework.boot:spring-boot-autoconfigure"
  compile "org.grails:grails-core"
  compile "org.springframework.boot:spring-boot-starter-actuator"
  compile "org.springframework.boot:spring-boot-starter-tomcat"
  compile "org.grails:grails-web-boot"
  compile "org.grails:grails-logging"
  compile "org.grails:grails-plugin-rest"
  compile "org.grails:grails-plugin-databinding"
  compile "org.grails:grails-plugin-i18n"
  compile "org.grails:grails-plugin-services"
  compile "org.grails:grails-plugin-url-mappings"
  compile "org.grails:grails-plugin-interceptors"
  compile "org.grails.plugins:cache"
  compile "org.grails.plugins:async"
  compile "org.grails.plugins:scaffolding"
  compile "org.grails.plugins:events"
  compile "org.grails.plugins:hibernate5"
  compile "org.hibernate:hibernate-core:5.4.18.Final"
  compile "org.grails.plugins:gsp"
  compileOnly "io.micronaut:micronaut-inject-groovy"
  console "org.grails:grails-console"
  profile "org.grails.profiles:web"
  runtime "org.glassfish.web:el-impl:2.1.2-b03"
  runtime "com.h2database:h2"
  runtime "org.apache.tomcat:tomcat-jdbc"
  runtime "javax.xml.bind:jaxb-api:2.3.1"
  runtime "com.bertramlabs.plugins:asset-pipeline-grails:3.2.4"
  testCompile "io.micronaut:micronaut-inject-groovy"
  testCompile "org.grails:grails-gorm-testing-support"
  testCompile "org.mockito:mockito-core"
  testCompile "org.grails:grails-web-testing-support"
  testCompile "org.grails.plugins:geb"
  testCompile "org.seleniumhq.selenium:selenium-remote-driver:3.14.0"
  testCompile "org.seleniumhq.selenium:selenium-api:3.14.0"
  testCompile "org.seleniumhq.selenium:selenium-support:3.14.0"
  testRuntime "org.seleniumhq.selenium:selenium-chrome-driver:3.14.0"
  testRuntime "org.seleniumhq.selenium:selenium-firefox-driver:3.14.0"
}

bootRun {
  ignoreExitValue true
  jvmArgs(
      '-Dspring.output.ansi.enabled=always',
      '-noverify',
      '-XX:TieredStopAtLevel=1',
      '-Xmx1024m' )
  sourceResources sourceSets.main
  String springProfilesActive = 'spring.profiles.active'
  systemProperty springProfilesActive, System.getProperty( springProfilesActive )
}

tasks.withType( GroovyCompile ) {
  configure( groovyOptions ) {
    forkOptions.jvmArgs = [ '-Xmx1024m' ]
  }
}

webdriverBinaries {
  chromedriver '2.45.0'
  geckodriver '0.24.0'
}

tasks.withType( Test ) {
  systemProperty "geb.env", System.getProperty( 'geb.env' )
  systemProperty "geb.build.reportsDir", reporting.file( "geb/integrationTest" )
  systemProperty "webdriver.chrome.driver", System.getProperty( 'webdriver.chrome.driver' )
  systemProperty "webdriver.gecko.driver", System.getProperty( 'webdriver.gecko.driver' )
}


assets {
  minifyJs = true
  minifyCss = true
  excludes = [
      "webjars/**/*"
  ]
  includes = [
    'webjars/openlayers/4.6.5/ol.js',
    'webjars/ol-layerswitcher/dist/ol-layerswitcher.js',
    'webjars/openlayers/4.6.5/ol.css',
    'webjars/ol-layerswitcher/src/ol-layerswitcher.css'
  ]
}

jib {
  from {
    image = 'nexus-docker-public-hosted.ossim.io/ossim-runtime-alpine:mando'
  }
  to {
    image = 'nexus-docker-public-hosted.ossim.io/ossim-demo'
  }
  extraDirectories {
    paths {
      path {
        from = file('src/main/jib')
        into = "/app"
      }
      path {
        from = file('src/main/jib')
        into = "/app"
      }
    }
    permissions = [
        "/app/run_java.sh": "755"
    ]
  }
  containerizingMode = 'packaged'
  container {
    environment = [
        JAVA_APP_DIR: '/app',
        JAVA_MAIN_CLASS: 'ossim.demo.Application',
        JAVA_CLASSPATH: '/app/classpath/*:/app/libs/*',
        JAVA_OPTIONS: '-server -Djava.awt.headless=true -Djava.security.egd=file:/dev/./urandom -XshowSettings:vm -XX:+UseStringDeduplication '
    ]
    ports = ['8080']
    creationTime = 'USE_CURRENT_TIMESTAMP'
    entrypoint = ['/app/run_java.sh']

  }
}

